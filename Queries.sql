CREATE TABLE "mytable" (
  "-- 1. View all customers" text
);

INSERT INTO "mytable" ("-- 1. View all customers")
VALUES
('SELECT * FROM customers;'),
('-- 2. Orders placed in the last 30 days'),
('SELECT * FROM orders'),
('WHERE order_date >= DATE_SUB(CURDATE()'),
('-- 3. Total revenue from all orders'),
('SELECT SUM(total_amount) AS total_revenue FROM orders;'),
('-- 4. Average order value per customer'),
('SELECT customer_id'),
('FROM orders'),
('GROUP BY customer_id;'),
('-- 5. Most popular products (based on quantity sold)'),
('SELECT p.product_name'),
('FROM order_items oi'),
('JOIN products p ON oi.product_id = p.product_id'),
('GROUP BY oi.product_id'),
('ORDER BY total_sold DESC'),
('LIMIT 5;'),
('-- 6. INNER JOIN - Orders with customer names'),
('SELECT o.order_id'),
('FROM orders o'),
('JOIN customers c ON o.customer_id = c.customer_id;'),
('-- 7. LEFT JOIN - All customers with their orders (including those who didn’t order)'),
('SELECT c.customer_name'),
('FROM customers c'),
('LEFT JOIN orders o ON c.customer_id = o.customer_id;'),
('-- 8. RIGHT JOIN - All orders and any missing customer details (if DB supports)'),
('SELECT c.customer_name'),
('FROM customers c'),
('RIGHT JOIN orders o ON c.customer_id = o.customer_id;'),
('-- 9. Total sales per category'),
('SELECT p.category'),
('FROM products p'),
('JOIN order_items oi ON p.product_id = oi.product_id'),
('GROUP BY p.category;'),
('-- 10. HAVING vs WHERE'),
('-- Get categories with sales more than ₹10'),
('SELECT p.category'),
('FROM order_items oi'),
('JOIN products p ON oi.product_id = p.product_id'),
('GROUP BY p.category'),
('HAVING total_sales > 10000;'),
('-- 11. Subquery - Customers with high total spending'),
('SELECT customer_name FROM customers'),
('WHERE customer_id IN ('),
('SELECT customer_id FROM orders'),
('GROUP BY customer_id'),
('HAVING SUM(total_amount) > 5000'),
(');'),
('-- 12. Create a View for Monthly Revenue'),
('CREATE VIEW monthly_revenue AS'),
('SELECT DATE_FORMAT(order_date'),
('FROM orders'),
('GROUP BY month;'),
('-- 13. Query the view'),
('SELECT * FROM monthly_revenue;'),
('-- 14. Payments received via different methods'),
('SELECT payment_method'),
('FROM payments'),
('GROUP BY payment_method;'),
('-- 15. Optimize query with index (optional)'),
('CREATE INDEX idx_customer_id ON orders(customer_id);'),
('CREATE INDEX idx_product_id ON order_items(product_id);');
